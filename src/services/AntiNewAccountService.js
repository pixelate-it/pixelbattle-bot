const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');

class AntiNewAccountService {
    constructor(client) {
        this.client = client;
        this.channel = client.channels.cache.get(client.config.notificationChannel)
    }

    async sendNotification(member) {
        return this.channel.send({
            embeds: [
                new EmbedBuilder()
                    .setTitle('–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ')
                    .setFooter({ text: '–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –Ω–∏–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞, –ø—Ä–µ–¥–ø—Ä–∏–Ω—è–≤—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏–µ' })
                    .setThumbnail(member.user.avatarURL())
                    .setFields([
                        {
                            name: 'üçé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                            value:
                                `> ID: \`${member.id}\`\n` +
                                `> –¢–µ–≥: \`${member.user.tag}\`\n` +
                                `> –ù–∏–∫: \`${member.nickname || '–æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç'}\`\n` +
                                `> –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <t:${Math.ceil(member.user.createdTimestamp / 1000)}>\n`
                        }
                    ])
                    .setColor(0x5865F2)
            ],
            components: [
                new ActionRowBuilder()
                    .addComponents([
                        new ButtonBuilder()
                            .setLabel('–ó–∞–±–∞–Ω–∏—Ç—å')
                            .setStyle(ButtonStyle.Danger)
                            .setEmoji('‚ö†Ô∏è')
                            .setCustomId(`ban_acc_${(await this.client.database.collection('users').findOne({ userID: member.id }))?._id ?? member.id}`)
                    ])
            ]
        });
    }
}

module.exports = AntiNewAccountService;